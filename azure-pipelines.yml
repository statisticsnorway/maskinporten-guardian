trigger:
  branches:
    include:
      - 'master'
  tags:
    include:
      - '*'

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

jobs:

  - job: testAndBuild
    displayName: 'Run tests and build maven artifacts'
    container: maven:3.8.2-openjdk-17
    condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')) # Always, except from when a tag is pushed
    steps:

      #Cache maven artifacts
      - task: Cache@2
        displayName: Cache Maven local repo
        inputs:
          key: 'maven | "$(Agent.OS)" | **/pom.xml'
          restoreKeys: |
            maven | "$(Agent.OS)"
            maven
          path: $(MAVEN_CACHE_FOLDER)

      - task: DownloadSecureFile@1
        name: gcrJsonKey
        displayName: 'Download gcr creds'
        inputs:
          secureFile: 'gcr-key.json'

      # Set env variable pointing to the file downloaded in previous task
      # as a library in next task needs this env variable
      - script: |
          echo "Setting env variable GOOGLE_APPLICATION_CREDENTIALS"
          echo "##vso[task.setvariable variable=GOOGLE_APPLICATION_CREDENTIALS]$(gcrJsonKey.secureFilePath)"
        displayName: 'Setting GOOGLE_APPLICATION_CREDENTIALS env variable'

      #Test and build
      - task: Maven@3
        displayName: 'Test and build'
        inputs:
          goals: 'verify test'
          options: '-P ssb-bip --batch-mode'
          mavenOptions: '$(MAVEN_OPTS)'

      #Maven caching to speed up pipeline build time
      - template: maven/task-cache.yml@templates

      # Deploy artifact to Nexus
      - template: maven/task-install-and-deploy-to-nexus.yml@templates
