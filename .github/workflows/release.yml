name: Release

on:
  push:
    branches:
      - release

env:
  REGISTRY: europe-north1-docker.pkg.dev/artifact-registry-5n/dapla-stat-docker
  IMAGE: maskinporten-guardian

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write

    steps:
      - name: Create DaplaBot app token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.DAPLA_BOT_APP_ID }}
          private-key: ${{ secrets.DAPLA_BOT_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: maven
          overwrite-settings: false

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/848539402404/locations/global/workloadIdentityPools/gh-actions/providers/gh-actions"
          service_account: "gh-actions-dapla-stat@artifact-registry-5n.iam.gserviceaccount.com"
          token_format: access_token

      - name: Configure Git user
        run: |
          git config user.email "dapla-bot[bot]"
          git config user.name "143391972+dapla-bot[bot]@users.noreply.github.com"

      - name: Setup Maven authentication to GitHub packages
        uses: s4u/maven-settings-action@v3.0.0
        with:
          override: true
          githubServer: false
          servers: '[{"id": "github","configuration": {"httpHeaders": {"property": {"name": "Authorization","value": "Bearer ${{ secrets.GITHUB_TOKEN }}"}}}}]'

      - name: Maven release and deploy to GitHub packages
        id: release_artifact
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          MAVEN_USERNAME: ${env.GITHUB_ACTOR}
          MAVEN_PASSWORD: ${env.GITHUB_TOKEN}
        run: |
          git config user.name "dapla-bot[bot]"
          git config user.email "143391972+dapla-bot[bot]@users.noreply.github.com"
          # Get the release version from the pom.xml before the next snapshot increment
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed "s/-SNAPSHOT//")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          # Perform the release/deploy and increment the version to the next snapshot
          mvn --batch-mode release:prepare -P github -Darguments="-Dmaven.test.skip=true -Dmaven.deploy.skip=true"
          mvn --batch-mode release:perform
          TAG=$(git describe --abbrev=0 --tags)
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Create GitHub release draft
        uses: release-drafter/release-drafter@v6
        id: create_github_release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        with:
          tag: ${{ steps.release_artifact.outputs.tag }}

      - name: Upload assets to GitHub release draft
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          # Get all files matching the artifact id and version (source, javadoc, etc.)
          ARTIFACT_GLOB=(./target/$ARTIFACT_ID-${{ steps.release_artifact.outputs.version }}*.jar)
          for file in "${ARTIFACT_GLOB[@]}"; do
            echo "Uploading $file"
            gh release upload ${{ steps.create_github_release.outputs.tag_name }} $file
          done

      - name: Publish GitHub release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        with:
          release_id: ${{ steps.create_github_release.outputs.id }}