on:
  release:
    types: [ published ]
  push:
    branches:
      - master
    paths-ignore:
      - "**/*.md"
      - "Makefile"
      - ".mvn"
      - ".gitignore"

env:
  NAIS_REGISTRY: europe-north1-docker.pkg.dev/${{ secrets.NAIS_MANAGEMENT_PROJECT_ID }}/dapla-stat/maskinporten-guardian
  DAPLA_REGISTRY: europe-north1-docker.pkg.dev/${{ secrets.GAR_PROJECT_ID }}
  IMAGE: maskinporten-guardian

jobs:
  setup-build-push-deploy:
    name: Set up variables to build/push or deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    outputs:
      nais-image: ${{steps.image-tag.outputs.nais_image}}
      nais-cluster: ${{steps.nais-deploy-vars.outputs.cluster}}
      nais-config-path: ${{steps.nais-deploy-vars.outputs.nais_config_path}}
      tags: ${{steps.image-tag.outputs.tags}}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate image tags
        id: image-tag
        run: |
          if [ ${{ github.event_name }} == "release" ]; then
            RELEASE_VERSION=${GITHUB_REF#refs/*/}
            semver=${NAIS_REGISTRY}/${IMAGE}:v${RELEASE_VERSION}
            major_minor_version=${NAIS_REGISTRY}/${IMAGE}:v$(echo "$RELEASE_VERSION" | cut -d'.' -f1-2)
            major_version=${NAIS_REGISTRY}/${IMAGE}:v$(echo "$RELEASE_VERSION" | cut -d'.' -f1)
            latest=${NAIS_REGISTRY}/${IMAGE}:latest

            ## NAIS image is the image used by NAIS for deployment
            echo "nais_image=${semver}" >> "$GITHUB_OUTPUT"

            tags=${latest},${semver},${major_minor_version},${major_version}
            echo "tags=${tags}" >> "$GITHUB_OUTPUT"
          else
            git_sha_short="$(git rev-parse --short ${{github.sha}})"
            current_sha_tag=${NAIS_REGISTRY}/${IMAGE}:${{github.event.repository.default_branch}}-$git_sha_short
            latest=${NAIS_REGISTRY}/${IMAGE}:latest

            ## NAIS image is the image used by NAIS for deployment
            echo "nais_image=${current_sha_tag}" >> "$GITHUB_OUTPUT"
            tags=${latest},${current_sha_tag}
            echo "tags=${tags}" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate NAIS deploy variables
        id: nais-deploy-vars
        run: |
          if [[ ${{github.event_name}} == "release" ]]; then
            echo "cluster=prod" >> "$GITHUB_OUTPUT"
            echo "nais_config_path=.nais/prod.yaml" >> "$GITHUB_OUTPUT"
          else
            echo "cluster=test" >> "$GITHUB_OUTPUT"
            echo "nais_config_path=.nais/test.yaml" >> "$GITHUB_OUTPUT"
          fi
      
  build-push:
    name: Build and push to registries
    # If triggering event is release, the commits on 'master' should build
    # the image
    needs: setup-build-push-deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{secrets.GAR_PROJECT_NUMBER}}/locations/global/workloadIdentityPools/gh-actions/providers/gh-actions"
          service_account: "gh-actions-dapla-stat@${{secrets.GAR_PROJECT_ID}}.iam.gserviceaccount.com"
          token_format: access_token

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DAPLA_REGISTRY }}
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - name: Maven build and install
        run: |
          if [[ ${{github.event_name}} == "push" ]]; then
            mvn --batch-mode -P dapla-artifact-registry deploy
          else
            mvn --batch-mode clean package
          fi

      - name: Build and push image to NAIS Artifact Repository
        uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: dapla-stat
          tag: ${{ needs.setup-build-push-deploy.outputs.nais-image }}
          pull: false
          project_id: ${{ secrets.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          byosbom: target/bom.json

  deploy:
    name: Deploy to NAIS
    needs: [build-push, setup-build-push-deploy]
    uses: ./.github/workflows/deploy-to-nais.yml
    with:
      image: ${{needs.setup-build-push-deploy.outputs.nais-image}}
      cluster: ${{needs.setup-build-push-deploy.outputs.nais-cluster}}
      nais-config-path:  ${{needs.setup-build-push-deploy.outputs.nais-config-path}}