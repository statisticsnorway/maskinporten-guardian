on:
  release:
    types: [ published ]
  workflow_call:
    inputs:
      commit-sha:
        description: Commit SHA from the caller
        required: true
        type: string

env:
  REGISTRY: europe-north1-docker.pkg.dev/artifact-registry-5n/dapla-stat-docker/maskinporten-guardian
  IMAGE: maskinporten-guardian

jobs:
  build-push:
    name: Push image to Artifact Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    outputs:
      image: ${{ env.REGISTRY }}/${{ env.IMAGE }}
      nais-image-tag: ${{steps.image_tag.outputs.nais_image_tag}}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/848539402404/locations/global/workloadIdentityPools/gh-actions/providers/gh-actions"
          service_account: "gh-actions-dapla-stat@artifact-registry-5n.iam.gserviceaccount.com"
          token_format: access_token

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
      
      - name: Generate image tags
        id: image_tag
        run: |
          if [ ${{ github.event_name }} == "release" ]; then
            semver=v${GITHUB_REF}
            major_minor_version=$(echo "$semver" | cut -d'.' -f1-2)
            major_version=$(echo "$semver" | cut -d'.' -f1)
            
            echo "nais_image_tag=${semver}" >> "$GITHUB_OUTPUT"

            tags=latest,${semver},${major_minor_version},${major_version}
            echo "tags=${tags}" >> "$GITHUB_OUTPUT"
          else
            git_sha_short="$(git rev-parse --short ${{inputs.commit-sha}})"
            current_tag=${{github.event.repository.default_branch}}-$git_sha_short

            echo "nais_image_tag=${current_tag}" >> "$GITHUB_OUTPUT"
            tags=latest,${current_tag}
            echo "tags=${tags}" >> "$GITHUB_OUTPUT"
          fi
      
      - name: Maven build and install
        run: mvn --batch-mode clean install
    
      - name: Docker meta
        id: docker_metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}

      - name: Build and push docker image to Artifact Registry
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.image_tag.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}

  deploy:
    name: Deploy to NAIS test cluster
    needs: build-push
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
    - uses: actions/checkout@v4

    - name: Generate NAIS deploy variables
      id: nais-deploy-vars
      run: |
        ## NAIS image tag is the tag used by NAIS for deployment
        if [[ ${{github.event_name}} == "release" ]]; then
          echo "cluster=prod" >> "$GITHUB_OUTPUT"
          echo "nais_config_path=.nais/prod.yaml" >> "$GITHUB_OUTPUT"
        else
          echo "cluster=test" >> "$GITHUB_OUTPUT"
          echo "nais_config_path=.nais/test.yaml" >> "$GITHUB_OUTPUT"
        fi

    - uses: ./.github/workflows/deploy-to-nais.yml
      with:
        image: ${{needs.build-push.outputs.image}}
        image-tag: ${{needs.build-push.outputs.nais-image-tag}}
        cluster: ${{steps.nais-deploy-vars.outputs.cluster}}
        nais-config-path: ${{steps.nais-deploy-vars.outputs.nais_config_path}}